e-Codex Protocol
================


:description: descripton of how to upload configuration
:library: Asciidoctor
:stylesheet: asciidoc.css
:imagesdir: ../../../assets/media/images/
 


== Abstract

e-Codex is a collection of different protocols and standards and is tying them together.
One of the main goals of e-Codex is the secure and and traceable transport of digital documents.
For this purpose e-Codex is built on top of AS4.

== Specifications of Requirements

The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
"SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
document are to be interpreted as described in [RFC2119].

== Status of this document

This document is currently work in progress and should describe e-Codex in a detailed fashion to
help other developers to implement it.

== Copyright Notice

This document is released under the EUPL license, but only the e-Codex consortium is allowed to
publish new releases of the e-Codex standard! So any modifications must change the document title so
it's clear that it is not an official version.

== Introduction

Within the judicial domain it becomes more likely that cases are international. A lot of countries
already have national systems to manage and trace digital received documents. But this systems
are unable to communicate with each other in a cross border manner. E-Codex is offering an approach
to address the technical problems which are occuring in transporting documents digitally between
different systems.

The judicially domain as an urgent need to always proove the authenticity of a document and
also proove when the document has entered the disposal area of a specific authority.

== Message Flow

The e-Codex message flow is business case driven. Multiple business messages related to each other
should grouped by the usage of the same conversationId. The conversationId must be a generic key
and must not contain any sensible information.


* sending system

** SUBMISSION_ACCEPTANCE should be created if the message is considered valid

** SUBMISSION_REJECTION should be created if the message is not a valid e-Codex or contains any information which makes it obvious for
the sending system that this message will not be accepted by the receiving system.

** RELAY_REMMD_FAILURE should be created if the configured timeout was reached and no evidence of the type RELAY_REMMD_ACCEPTANCE,
DELIVERY_ACCEPTANCE, DELIVERY_REJECTION, RETRIEVAL_ACCEPTANCE, RETRIEVAL_REJECTION has been received.

* receiving system

** RELAY_REMMD_ACCEPTANCE should be created if the message is received at the new domain and can be processed and passed to the
next relaying system or target system.

** RELAY_REMMD_REJECTION should be created if the message cannot be processed or passed to the next relaying system or target system.

** DELIVERY should be created if the message was successfully passed to the target system. The DELIVERY_ACCEPTANCE should
be generated accordingly to the national law when the message has been legally passed to the receiving authority.
The usage and meaning of the DELIVERY should be defined within the business case.

** NON_DELIVERY should be created if the message cannot be passed to the target system, authority, or even when the
acceptance of the message is denied due formal reasons. The usage and meaning of the NON_DELIVERY should be
defined within the business case.

** RETRIEVAL may be created if the message has been seen by the processing system, user, human, The usage and meaning of the RETRIEVAL
should be defined within the business case.

** NON_RETRIEVAL may be created if the message has not been seen by the processing system, user human within a given time period.
The usage and meaning of the NON_RETRIEVAL should be defined within the business case.



== Asic-S Container Format

As the content is packaged into the ASIC-S container. The ASIC-S container format itself is described
at http://www.etsi.org/deliver/etsi_ts/103100_103199/103174/02.02.01_60/ts_103174v020201p.pdf

The following documents are part of the ASIC-S container:

* A business document of any name.
* Attachments

== Token.xml format

The token must be generated by the sending e-Codex system. It must be signed with a certificate which
is valid in the e-codex environment.



== Evidences

To track the message during the way through the different systems the message processing points
must generate ETSI-REM evidences. The evidences are always generated and processed in the xml-format.

TODO: describe evidences in more detail, link the ETSI document.

The following evidences must be supported by an e-Codex system. The messages are
distinguished in the good case and the error or fault case. For the different cases
the evidences are named differently in UPPER-CASE letters according to the following list:

* SubmissionAcceptanceRejection
** SUBMISSION_ACCEPTANCE
** SUBMISSION_REJECTION
* RelayToREMMDAcceptanceRejection
** RELAY_REMMD_ACCEPTANCE
** RELAY_REMMD_REJECTION
* RelayToREMMDFailure
** RELAY_REMMD_FAILURE
* DeliveryNonDeliveryToRecipient
** DELIVERY
** NON_DELIVERY
* RetrievalNonRetrievalByRecipient
** RETRIEVAL
** NON_RETRIEVAL


== Evidences handling

A message with an SUBMISSION_REJECTION should not leave the sending system. If a message with an SUBMISSION_REJECTION
is received by an receiving system the system must ignore it. Any following messages or
evidences to this message must be ignored.

NOTE: This means that the receiving system must track at least the message metadata and evidences itself to be able to track the assocation between the messages.


== AS4 Message Format/Structure

Within e-Codex the messages are exchanged over AS4. The e-Codex messages are transported
with the e-SENS AS4 profile. https://ec.europa.eu/cefdigital/wiki/display/CEFDIGITAL/e-SENS+AS4+-+1.12

The exchanged messages must have additionally to the e-SENS profile attributes the following structure:

The message properties finalRecipient and originalSender must be set.

There are 2 types of messages. The evidence messages and the business message.

The business message must follow the following rules:

* The message must have a payload with the name 'messageContent' this content is the business xml and must
have the mimeType 'text/xml'
* The message must have a payload with the name 'container-signed-xades-baseline-b.asics' this content is the
ASIC-S container it must have the mimeType 'application/vnd.etsi.asic-s+zip' and it must be a valid ASIC-S
e-Codex container.
* The message must have a payload with the name 'Token.xml' this content must be a valid e-Codex Token.xml
and must have the mimeType 'text/xml'
* The message should have a payload with the name SUBMISSION_ACCEPTANCE this content
is a evidence of the type SUBMISSION_ACCEPTANCE with the mimeType 'text/xml'.

The confirmationMessage must follow the following rules:

* The message must have a payload with the name of the evidence [see evidence chapter]
* The AS4 property refToMessageId must be set to the business message ebmsId the evidence was generated for.
* The confirmation message must contain only one evidence


== Certificates

Within an e-Codex environment multiple certificates are used. For a valid e-Certificate in an e-Codex environment
the certificate must comply to following rules. Any references to CRL or OCSP protocol links or future
X509 protocols must be reachable within the e-Codex environment. So is the e-Codex system running over a public
network then the references must also be resolvable over this network.









  
  
  
  
  