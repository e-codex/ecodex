{
  "reference": {
    "path": "wiki/ecodex",
    "baseUrl": "/e-codex/ecodex",
    "fileName": "example_deployment",
    "extension": "html",
    "usePrettyUrl": true,
    "link": "/e-codex/ecodex/wiki/ecodex/example_deployment"
  },
  "next": {
    "path": "wiki/ecodex",
    "baseUrl": "/e-codex/ecodex",
    "fileName": "configuration_update",
    "extension": "html",
    "usePrettyUrl": true,
    "link": "/e-codex/ecodex/wiki/ecodex/configuration_update"
  },
  "previous": {
    "path": "wiki/ecodex",
    "baseUrl": "/e-codex/ecodex",
    "fileName": "ecodex_protocol",
    "extension": "html",
    "usePrettyUrl": true,
    "link": "/e-codex/ecodex/wiki/ecodex/ecodex_protocol"
  },
  "data": {},
  "description": "",
  "title": "Example Deployment",
  "content": "<div id=\"preamble\">\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>The following setup describes an example setup of how the e-codex components can be installed.<\/p>\n<\/div>\n<div class=\"imageblock\">\n<div class=\"content\">\n<img src=\"../../../assets/media/images/ecodex_example_deployment.png\" alt=\"ecodex example deployment\">\n<\/div>\n<div class=\"title\">Figure 1. Deployment Graphics<\/div>\n<\/div>\n<\/div>\n<\/div>\n<div class=\"sect1\">\n<h2 id=\"_components\">Components<\/h2>\n<div class=\"sectionbody\">\n<table class=\"tableblock frame-all grid-all stretch\">\n<caption class=\"title\">Table 1. Table Components<\/caption>\n<colgroup>\n<col style=\"width: 50%;\">\n<col style=\"width: 50%;\">\n<\/colgroup>\n<thead>\n<tr>\n<th class=\"tableblock halign-left valign-top\">Name<\/th>\n<th class=\"tableblock halign-left valign-top\">Description<\/th>\n<\/tr>\n<\/thead>\n<tbody>\n<tr>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">Internet<\/p><\/td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">Symbolizes the Internet, The connection between the Gateways is made through it<\/p><\/td>\n<\/tr>\n<tr>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">Firewall, DDOS-Filter<\/p><\/td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">A Firewall which protects the internal network. The information distributed over the CMT can be used to reduce the range of IP-Addresses which can connect through this firewall to the Apache Web Server<\/p><\/td>\n<\/tr>\n<tr>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">Apache Web Server<\/p><\/td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">The Apache Web Server in this Setup is responsible for terminating the TLS-Connection, Authenticating the connecting Web-Clients (the remote Gateway) by checking the client certificate<\/p><\/td>\n<\/tr>\n<tr>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">Tomcat Web Application Server - Domibus Gateway<\/p><\/td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">The domibus Gateway is deployed on a Tomcat Web Application Server<\/p><\/td>\n<\/tr>\n<tr>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">Tomcat Web Application Server - Domibus Connector<\/p><\/td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">The domibusConnector is deployed on a Tomcat Web Application Server<\/p><\/td>\n<\/tr>\n<tr>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">Tomcat Web Application Server - Connector Client Application<\/p><\/td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">The Connector Client Application is deployed on a Tomcat Web Application Server. This can be a national solution of an eCodeX-UseCase or the ReferenceImplementation.<\/p><\/td>\n<\/tr>\n<tr>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">Database<\/p><\/td>\n<td class=\"tableblock halign-left valign-top\"><p class=\"tableblock\">The database (MYSQL) provides for each application a different database.<\/p><\/td>\n<\/tr>\n<\/tbody>\n<\/table>\n<div class=\"literalblock\">\n<div class=\"content\">\n<pre>**Note that each application is running on it's own tomcat application server in this example!**<\/pre>\n<\/div>\n<\/div>\n<div class=\"sect2\">\n<h3 id=\"_firewall_ddos_filter\">Firewall, DDOS-Filter<\/h3>\n<div class=\"paragraph\">\n<p>The firewall acts in this setup as simple IP-Filtering mechanism and ensures that only the partners of the ecodex-Network\ncan access the domibus gateway.<\/p>\n<\/div>\n<\/div>\n<div class=\"sect2\">\n<h3 id=\"_example_apache_setup_and_alternatives\">Example Apache Setup and alternatives<\/h3>\n<div class=\"paragraph\">\n<p>Possible alternatives for the apache in this use case can be:<\/p>\n<\/div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>NGINX<\/p>\n<\/li>\n<li>\n<p>IIS<\/p>\n<\/li>\n<li>\n<p>Apache<\/p>\n<\/li>\n<li>\n<p>Tomcat (using tomcat for TLS-terminiation)<\/p>\n<\/li>\n<li>\n<p>&#8230;&#8203;<\/p>\n<\/li>\n<\/ul>\n<\/div>\n<div class=\"paragraph\">\n<p>The most commonly used webserver is the apache webserver. <a href=\"http://httpd.apache.org/\" class=\"bare\">http://httpd.apache.org/<\/a>\nApache is well doucmented and there are a lot of examples. Important for the setup is that\nthe tls (at least TLS 1.2 better TLS 1.3) encryption is enabled on apache. For this purpose the\napache server needs a certificate. You can obtain this certificate also over letsencrypt.<\/p>\n<\/div>\n<div class=\"paragraph\">\n<p>As apache is the most used webserver over the whole internet the next paragraphs will cover the e-Codex\nspecifics of an apache setup.<\/p>\n<\/div>\n<div class=\"sect3\">\n<h4 id=\"_setting_up_apache\">Setting up Apache<\/h4>\n<div class=\"paragraph\">\n<p>The apache webserver project site offers a good tutorial for setting up apache with TLS-encryption.\n<a href=\"https://httpd.apache.org/docs/2.4/en/ssl/ssl_howto.html\" class=\"bare\">https://httpd.apache.org/docs/2.4/en/ssl/ssl_howto.html<\/a><\/p>\n<\/div>\n<div class=\"paragraph\">\n<p>After the apache setup is complete make sure that your webserver is reachable over https from\nthe public internet. And also export the whole public certificate chain to the CMT to share\nyour public key information with your e-Codex network partners. This is very important if you\nare using a not well trusted certificate authority or a self signed certificate.<\/p>\n<\/div>\n<div class=\"paragraph\">\n<p>Your shared webserver certificate will become part of the trusted_webserver.jks keystore - and\nonly certificates within this store are considered trusted in the specific e-Codex Environment.<\/p>\n<\/div>\n<\/div>\n<div class=\"sect3\">\n<h4 id=\"_activating_tls_client_authentication2_way_ssl_on_apache\">Activating TLS-client-authentication/2-way-SSL on apache<\/h4>\n<div class=\"paragraph\">\n<p>Some e-Codex usecases may require also TLS-client authentication (aka 2-way-SSL). If the client authentication\nis used also the client is authenticated at the server on TLS level. For this purpose the client presents\na client certificate to the webserver when opening the connection.<\/p>\n<\/div>\n<div class=\"paragraph\">\n<p>For activating 2-way-ssl on apache the following example configuration can be used. For further details\nconsult the apache manual!<\/p>\n<\/div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code>&lt;VirtualHost _default_:443&gt;\n  SSLEngine on\n  ServerName localhost:443\n  SSLCertificateFile \"${SRVROOT}/conf/ssl/server.crt\"\n  SSLCertificateKeyFile \"${SRVROOT}/conf/ssl/server.key\"\n  # The following Parameter holds all trusted client certificates (2)\n  # (and thier parent certificates) in pem-format.\n  SSLCACertificateFile \"${SRVROOT}/conf/ssl/trusted_clients.pem\"\n  DocumentRoot \"${SRVROOT}/htdocs\"\n\n\tCustomLog \"${SRVROOT}/logs/ssl_request.log %t %h %{SSL_PROTOCOL}x %{SSL_CIPHER}x \\\"%r\\\" %b\"\n\t&lt;Directory \"${SRVROOT}/htdocs\"&gt;\n\t\tOptions Indexes Includes FollowSymLinks\n\t\tAllowOverride AuthConfig Limit FileInfo\n        Require all granted\n\t&lt;/Directory&gt;\n\n  #always protect the whole v-host to avoid post-handshake authentication!\n  SSLVerifyClient Require\n  SSLVerifyDepth 2 # clientcert(0)-&gt;intermediateCA(1)-&gt;RootCA(2)\n\n  &lt;Location \"/domibus/services/msh\" &gt;\n    ProxyPass &lt;gateway&gt;/domibus/services/msh\n    ProxyPassReverse &lt;gateway&gt;/domibus/services/msh\n  &lt;/Location&gt;\n\n&lt;/virtualhost&gt;<\/code><\/pre>\n<\/div>\n<\/div>\n<div class=\"paragraph\">\n<p>SSLVerifyDepth <a href=\"https://httpd.apache.org/docs/2.4/en/mod/mod_ssl.html#sslverifydepth\" class=\"bare\">https://httpd.apache.org/docs/2.4/en/mod/mod_ssl.html#sslverifydepth<\/a><\/p>\n<\/div>\n<div class=\"admonitionblock note\">\n<table>\n<tr>\n<td class=\"icon\">\n<div class=\"title\">Note<\/div>\n<\/td>\n<td class=\"content\">\nPut the SSLVerifyClient Require directive into the vhost directive to avoid SSL renegotiation. Though apache\nsupports the SSLVerifyClient also within a Location directive but this would force the client to renegotiate the\nTLS connection. This can lead to connection errors at the as webclient acting domibus gateway.\n<\/td>\n<\/tr>\n<\/table>\n<\/div>\n<\/div>\n<div class=\"sect3\">\n<h4 id=\"_additional_notes_on_webserver_setup\">Additional Notes on Webserver Setup<\/h4>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>Ensure TLS 1.3 is activated and downgrading is not allowed!<\/p>\n<\/li>\n<li>\n<p>Ensure that if the usecase requires it TLS-client authentication is activated<\/p>\n<\/li>\n<\/ul>\n<\/div>\n<\/div>\n<\/div>\n<div class=\"sect2\">\n<h3 id=\"_as4_gateway_domibus_gateway\">AS4 Gateway / Domibus Gateway<\/h3>\n<div class=\"paragraph\">\n<p>Most of the e-Codex installations are using the domibus gateway for fullfilling the AS4 interface. But there\nare also known installations which are using IBM axway.<\/p>\n<\/div>\n<div class=\"paragraph\">\n<p>The eDelivery site of CEF lists some more alternatives:\n<a href=\"https://ec.europa.eu/cefdigital/wiki/display/CEFDIGITAL/eDelivery+AS4+conformant+solutions\" class=\"bare\">https://ec.europa.eu/cefdigital/wiki/display/CEFDIGITAL/eDelivery+AS4+conformant+solutions<\/a><\/p>\n<\/div>\n<div class=\"paragraph\">\n<p>Keep in mind that if you are using some of the alternatives you still have to fullfill the e-Codex protocol demands.\n(TODO: link to technical differences ecodex - eDelivery)<\/p>\n<\/div>\n<div class=\"sect3\">\n<h4 id=\"_example_setup\">Example Setup<\/h4>\n<div class=\"paragraph\">\n<p>For installing the domibus gateway the website provides a very good guide.\n<a href=\"https://ec.europa.eu/cefdigital/wiki/display/CEFDIGITAL/Domibus\" class=\"bare\">https://ec.europa.eu/cefdigital/wiki/display/CEFDIGITAL/Domibus<\/a><\/p>\n<\/div>\n<\/div>\n<div class=\"sect3\">\n<h4 id=\"_tls_client_authentication2_way_ssl_authentication\">TLS-client-authentication/2-way-SSL authentication<\/h4>\n<div class=\"paragraph\">\n<p>For clientauthentication the information is located under:<\/p>\n<\/div>\n<div class=\"paragraph\">\n<p>&lt;domibus_tomcat&gt;/conf/domibus/clientauthentication.xml<\/p>\n<\/div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-$xml\" data-lang=\"$xml\">&lt;http-conf:tlsClientParameters disableCNCheck=\"true\" secureSocketProtocol=\"TLSv1.2\"\n  xmlns:http-conf=\"http://cxf.apache.org/transports/http/configuration\"\n  xmlns:security=\"http://cxf.apache.org/configuration/security\"&gt;\n\n  &lt;security:trustManagers&gt;\n    &lt;!-- the following line contains the store which holds all trusted\n    webserver certificates (file (b)) and thier parent certificates --&gt;\n    &lt;security:keyStore type=\"JKS\"\n        password=\"changeit\"\n        file=\"${domibus.config.location}/keystores/trusted_https_servers.jks\"\n    /&gt;\n  &lt;/security:trustManagers&gt;\n  &lt;security:keyManagers keyPassword=\"12345\"&gt;\n  &lt;!-- this key store contains the web client private key,\n  the public certificate is distributed with\n  the trusted_https_clients store  --&gt;\n    &lt;security:keyStore\n        type=\"JKS\"\n        password=\"12345\"\n        file=\"${domibus.config.location}/keystores/https_client_keystore.jks\"\n    /&gt;\n  &lt;/security:keyManagers&gt;\n&lt;/http-conf:tlsClientParameters&gt;<\/code><\/pre>\n<\/div>\n<\/div>\n<div class=\"paragraph\">\n<p>The same file is also used to list the trusted webservers the domibus gateway is connecting to. The\ncertifcates (and thier intermediate and RootCAs) of the trusted webservers are listed within\nthe trusted_https_servers.jks truststore.<\/p>\n<\/div>\n<div class=\"paragraph\">\n<p>To activate clientauthentication the gateway must present the webserver a key. This key is\nstored in the https_client_keystore.jks. This key is private! The corresponding certificate is\ndistributed within the trusted_webclients.pem file and used at the webserver to allow the connection.<\/p>\n<\/div>\n<\/div>\n<\/div>\n<div class=\"sect2\">\n<h3 id=\"_setting_up_connector\">Setting up Connector<\/h3>\n<div class=\"paragraph\">\n<p>The additional features of the e-Codex protocol like<\/p>\n<\/div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>evidence handling<\/p>\n<\/li>\n<li>\n<p>ASIC-S container building<\/p>\n<\/li>\n<li>\n<p>TrustOK Token generatation<\/p>\n<\/li>\n<\/ul>\n<\/div>\n<div class=\"paragraph\">\n<p>are provided by the domibusConnector. The domibus connector comes with an installation manual.<\/p>\n<\/div>\n<div class=\"paragraph\">\n<p>(TODO: set link to connector manual!)<\/p>\n<\/div>\n<\/div>\n<\/div>\n<\/div>"
}